services:
  # api:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   environment:
  #     - ConnectionStrings__DefaultConnection=User ID =NewsAdmin;Password=Test@Bilal;Host=db;Port=5432;Database=NewsDB;Pooling=true;
  #     - ASPNETCORE_ENVIRONMENT=docker
  #     - ASPNETCORE_URLS=http://+:80
  #   ports:
  #     - 3000:80
  #     # - 443:443
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #   networks:
  #     - api-network
  db:
    image: postgres:latest # Use the official PostgreSQL image
    restart: always # Restart the container automatically if it stops
    hostname: newsd
    container_name: newsd
    environment:
      - POSTGRES_DB=NewsDB # Name of your database
      - POSTGRES_USER=NewsAdmin # Database user
      - POSTGRES_PASSWORD=Test@Bilal # User's password
    ports:
      - "5432:5432" # Expose port 5432 for external access
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data # Persist data even if the container is removed
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data_dev:
# networks:
#   api-network:
#     driver: bridge
# docker-compose -f docker-compose-development.yaml up -d
